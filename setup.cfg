[metadata]
license_files = LICENSE

[egg_info]
tag_build = .dev
tag_date = true

[aliases]
release = egg_info -Db ''
upload = upload --sign --identity=36580288

[flake8]
max-line-length = 95
ignore = E116,E241,E251,E741,W504,I101,B006,B023
exclude = .git,.tox,.venv,tests/roots/*,build/*,doc/_build/*,sphinx/search/*,doc/usage/extensions/example*.py
application-import-names = sphinx
import-order-style = smarkets
per-file-ignores =
    tests/*: E501

[isort]
line_length = 95

[mypy]
python_version = 3.6
disallow_incomplete_defs = True
show_column_numbers = True
show_error_context = True
show_error_codes = true
ignore_missing_imports = True
follow_imports = skip
check_untyped_defs = True
warn_unused_ignores = True
strict_optional = True
no_implicit_optional = True
warn_redundant_casts = True

[mypy-sphinx.application]
strict_optional = False

[mypy-sphinx.builders]
strict_optional = False

[mypy-sphinx.builders.html]
strict_optional = False

[mypy-sphinx.builders.latex]
strict_optional = False

[mypy-sphinx.builders.linkcheck]
strict_optional = False

[mypy-sphinx.directives.code]
strict_optional = False

[mypy-sphinx.domains.*]
strict_optional = False

[mypy-sphinx.environment]
strict_optional = False

[mypy-sphinx.environment.adapters.toctree]
strict_optional = False

[mypy-sphinx.environment.adapters.indexentries]
strict_optional = False

[mypy-sphinx.ext.*]
strict_optional = False

[mypy-sphinx.pycode.parser]
strict_optional = False

[mypy-sphinx.registry]
strict_optional = False

[mypy-sphinx.setup_command]
strict_optional = False

[mypy-sphinx.testing.util]
strict_optional = False

[mypy-sphinx.transforms.i18n]
strict_optional = False

[mypy-sphinx.transforms.post_transforms.images]
strict_optional = False

[mypy-sphinx.util.cfamily]
strict_optional = False

[mypy-sphinx.util.docfields]
strict_optional = False

[mypy-sphinx.util.docutils]
strict_optional = False

[mypy-sphinx.util.nodes]
strict_optional = False

[mypy-sphinx.util.typing]
strict_optional = False

[mypy-sphinx.writers.html]
strict_optional = False

[mypy-sphinx.writers.html5]
strict_optional = False

[mypy-sphinx.writers.latex]
strict_optional = False

[mypy-sphinx.writers.text]
strict_optional = False

[mypy-sphinx.writers.xml]
strict_optional = False

[tool:pytest]
filterwarnings =
    all
    ignore::DeprecationWarning:docutils.io
    ignore::DeprecationWarning:pyximport.pyximport
    ignore::ImportWarning:importlib._bootstrap
markers =
    apidoc
    setup_command
testpaths = tests

[coverage:run]
branch = True
parallel = True
source = sphinx

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
ignore_errors = True
